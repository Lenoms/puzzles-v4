{"version":3,"sources":["Library/Book.js","Library/Library.service.js","Library/Bookshelf.js","Library/Library.constants.js","Library/Library.jsx","constants/LevelAnswers.constants.js","components/AnswerAndHintBox.js","services/Game.service.js","Levels/one/Flower.js","Levels/one/One.jsx","Levels/one/One.service.js","Levels/two/Torch.jsx","Levels/two/Two.constants.js","Levels/two/Two.jsx","Levels/three/ColourWizard.jsx","Levels/three/Dot.jsx","Levels/three/Three.service.js","Levels/three/Three.constants.js","Levels/three/Three.jsx","routes/GameRoutes.js","App.js","index.js"],"names":["Book","props","_ref","navigate","useNavigate","_jsx","className","onClick","level","concat","style","background","colour","_defineProperty","height","children","getRandomBookValues","n","levels","colourOptions","books","i","book","Math","floor","random","length","push","levelExistsAtBookIndex","array","j","index","coords","Bookshelf","bookshelves","map","bookshelf","bookshelfLevels","name","bookshelfOneLevels","bookshelfTwoLevels","Library","_jsxs","levelAnswers","AnswerAndHintBox","_useState","useState","_useState2","_slicedToArray","isHidden","setIsHidden","_useState3","_useState4","textInput","setTextInput","location","useLocation","type","value","onChange","e","target","answer","pathname","split","pop","toUpperCase","answerIsCorrect","console","log","placeholder","Flower","class","backgroundColor","One","flowers","colors","getRandomInt","min","max","flower","top","left","generateFlowers","Torch","torchOn","setTorchOn","handleToggle","letterMapping","Two","torchArray","setTorchArray","state","newTorchArray","_toConsumableArray","useEffect","decimalValue","parseInt","Number","join","document","getElementsByClassName","innerHTML","ColourWizard","Dot","letter","getColourByLetter","key","lettersByColour","wizardAnswer","inputString","_step","colours","_iterator","_createForOfIteratorHelper","s","done","err","f","getColoursFromString","dotArray","previousColor","innerArray","randomIndex","dot","generateDotArray","Three","showWizardText","setShowWizardText","dotRow","GameRoutes","Routes","Route","exact","path","element","App","width","window","innerWidth","innerHeight","ReactDOM","createRoot","getElementById","render","React","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.0968c930.chunk.js","sourcesContent":["import \"./Book.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Book(props) {\r\n  const navigate = useNavigate();\r\n  const navigateIfLevelExists = () => {\r\n    if (props.level) {\r\n      navigate(`/puzzles-v4/${props.level}`);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className=\"book\"\r\n      onClick={() => navigateIfLevelExists()}\r\n      style={{\r\n        background: props.colour,\r\n        background: `linear-gradient(180deg, ${props.colour} 0%, rgb(0, 0, 0) 100%)`,\r\n        height: `${props.height}%`,\r\n      }}\r\n    >\r\n      {props.level}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n","export function getRandomBookValues(n, levels) {\r\n  // Define a list of 10 possible colors\r\n  const colourOptions = [\r\n    \"rgb(128, 0, 0)\", // Dark Red\r\n    \"rgb(0, 0, 128)\", // Dark Blue\r\n    \"rgb(0, 128, 0)\", // Dark Green\r\n    \"rgb(128, 128, 0)\", // Dark Yellow\r\n    \"rgb(64, 0, 64)\", // Dark Purple\r\n    \"rgb(128, 64, 0)\", // Dark Orange\r\n    \"rgb(128, 0, 128)\", // Dark Pink\r\n    \"rgb(64, 32, 0)\", // Dark Brown\r\n    \"rgb(0, 128, 128)\", // Dark Cyan\r\n    \"rgb(128, 0, 64)\", // Dark Magenta\r\n  ];\r\n\r\n  // Helper function to generate a random number between 40 and 90\r\n  function generateRandomHeight() {\r\n    return Math.floor(Math.random() * (90 - 40 + 1)) + 40;\r\n  }\r\n\r\n  // Create an array to store the generated objects\r\n  const books = [];\r\n\r\n  // Generate n objects\r\n  for (let i = 0; i < n; i++) {\r\n    const colourIndex = Math.floor(Math.random() * colourOptions.length);\r\n    const randomColour = colourOptions[colourIndex];\r\n    const randomHeight = generateRandomHeight();\r\n\r\n    // Create an object with \"color\" and \"height\" properties\r\n    const book = {\r\n      colour: randomColour,\r\n      height: randomHeight,\r\n    };\r\n\r\n    // Add the object to the array\r\n    books.push(book);\r\n  }\r\n\r\n  return books;\r\n}\r\n\r\nexport function levelExistsAtBookIndex(array, i, j) {\r\n  for (let index = 0; index < array.length; index++) {\r\n    if (array[index].coords[0] === i && array[index].coords[1] === j) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n","import Book from \"./Book\";\r\nimport \"./Bookshelf.css\";\r\nimport { getRandomBookValues, levelExistsAtBookIndex } from \"./Library.service\";\r\n\r\nfunction Bookshelf(props) {\r\n  const bookshelves = [\r\n    getRandomBookValues(20),\r\n    getRandomBookValues(20),\r\n    getRandomBookValues(20),\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bookshelf-container\">\r\n      {bookshelves.map((bookshelf, i) => (\r\n        <div className=\"bookshelf-shelf\" key={`bookshelf-${i}`}>\r\n          {bookshelves[i].map((book, j) => (\r\n            <Book\r\n              key={`book-${i},${j}`}\r\n              colour={book.colour}\r\n              height={book.height}\r\n              level={\r\n                levelExistsAtBookIndex(props.bookshelfLevels, i, j) !== -1\r\n                  ? props.bookshelfLevels[\r\n                      levelExistsAtBookIndex(props.bookshelfLevels, i, j)\r\n                    ].name\r\n                  : null\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bookshelf;\r\n","export const bookshelfOneLevels = [\r\n  {\r\n    name: \"one\",\r\n    coords: [0, 2],\r\n  },\r\n  {\r\n    name: \"two\",\r\n    coords: [0, 6],\r\n  },\r\n  {\r\n    name: \"three\",\r\n    coords: [0, 15],\r\n  },\r\n  {\r\n    name: \"six\",\r\n    coords: [1, 4],\r\n  },\r\n  {\r\n    name: \"seven\",\r\n    coords: [1, 12],\r\n  },\r\n  {\r\n    name: \"eleven\",\r\n    coords: [2, 1],\r\n  },\r\n  {\r\n    name: \"twelve\",\r\n    coords: [2, 10],\r\n  },\r\n];\r\nexport const bookshelfTwoLevels = [\r\n  {\r\n    name: \"four\",\r\n    coords: [0, 4],\r\n  },\r\n  {\r\n    name: \"five\",\r\n    coords: [0, 18],\r\n  },\r\n  {\r\n    name: \"eight\",\r\n    coords: [1, 2],\r\n  },\r\n  {\r\n    name: \"nine\",\r\n    coords: [1, 9],\r\n  },\r\n  {\r\n    name: \"ten\",\r\n    coords: [1, 14],\r\n  },\r\n  {\r\n    name: \"thirteen\",\r\n    coords: [2, 4],\r\n  },\r\n  {\r\n    name: \"fourteen\",\r\n    coords: [2, 12],\r\n  },\r\n  {\r\n    name: \"fifteen\",\r\n    coords: [2, 18],\r\n  },\r\n];\r\n","import Bookshelf from \"./Bookshelf\";\r\nimport { bookshelfOneLevels, bookshelfTwoLevels } from \"./Library.constants\";\r\nimport \"./Library.css\";\r\n\r\nfunction Library() {\r\n  return (\r\n    <div className=\"library-container\">\r\n      <div className=\"library-ceiling\">\r\n        <div className=\"light\"></div>\r\n      </div>\r\n      <div className=\"bookshelf-row\">\r\n        <Bookshelf bookshelfLevels={bookshelfOneLevels}/>\r\n        <Bookshelf bookshelfLevels={bookshelfTwoLevels}/>\r\n      </div>\r\n      <div className=\"library-floor\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n","export const levelAnswers = {\r\n  \"puzzles-v4\": \"hello\",\r\n  \"one\": \"apple\",\r\n  \"two\": \"banana\",\r\n  \"three\": \"chromalevo\",\r\n  \"four\": \"pineapple\",\r\n  \"five\": \"apricot\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./AnswerAndHintBox.css\";\r\nimport { answerIsCorrect } from \"../services/Game.service\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction AnswerAndHintBox() {\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  const handleInputChange = (e) => {\r\n    setTextInput(e.target.value);\r\n    if (answerIsCorrect(e.target.value, location)) {\r\n      console.log(\"Level complete!\");\r\n      // Handle level end\r\n    }\r\n  };\r\n\r\n  const handleArrowClick = () => {\r\n    setIsHidden(!isHidden);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`answer-hint-box-container ${\r\n        isHidden ? \"short\" : \"additional-content\"\r\n      }`}\r\n    >\r\n      <div className=\"answer-text-and-arrow-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"answer-text-box\"\r\n          value={textInput}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Answer\"\r\n        />\r\n        <div\r\n          className={`dropdown-arrow ${isHidden ? \"down-arrow\" : \"up-arrow\"}`}\r\n          onClick={handleArrowClick}\r\n        ></div>\r\n      </div>\r\n      {!isHidden && (\r\n        <div className=\"dropdown-section\">\r\n          {/* Content to be revealed */}\r\n          <p>Additional content</p>\r\n          {/* Add more elements or data to show in the revealed section */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnswerAndHintBox;\r\n","import { levelAnswers } from \"../constants/LevelAnswers.constants\";\r\n\r\nexport function answerIsCorrect(answer, location) {\r\n  // Get the last segment of the pathname\r\n  const level = location.pathname.split(\"/\").pop();\r\n\r\n  // Compare the provided answer with the last segment\r\n  return answer.toUpperCase() === levelAnswers[level].toUpperCase();\r\n}\r\n","export function Flower(props) {\r\n  return (\r\n    <div className=\"flower\">\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n      <div class=\"petal\" style={{ backgroundColor: `${props.colour}` }}></div>\r\n\r\n      <div class=\"center\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import AnswerAndHintBox from \"../../components/AnswerAndHintBox\";\r\nimport { Flower } from \"./Flower\";\r\nimport \"./One.css\";\r\nimport { generateFlowers } from \"./One.service\";\r\n\r\nfunction One() {\r\n  const flowers = generateFlowers(50)\r\n  return (\r\n    <div className=\"level-1-div\">\r\n      <AnswerAndHintBox />\r\n      {flowers.map((flower) => {\r\n        return <div className=\"flower-container\" style={{top: flower.top, left: flower.left}}>\r\n          <Flower colour={flower.colour}/>\r\n        </div>\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default One;\r\n","export function generateFlowers(n) {\r\n  // Array to store generated objects\r\n  const flowers = [];\r\n\r\n  // Possible colors for the flowers\r\n  const colors = [\r\n    \"red\",\r\n    \"orange\",\r\n    \"yellow\",\r\n    \"green\",\r\n    \"blue\",\r\n    \"purple\",\r\n    \"pink\",\r\n    \"violet\",\r\n    \"white\",\r\n    \"cyan\",\r\n  ];\r\n\r\n  // Helper function to generate a random integer between min and max\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  // Generate n objects\r\n  for (let i = 0; i < n; i++) {\r\n    const flower = {\r\n      colour: colors[getRandomInt(0, colors.length - 1)],\r\n      top: `${getRandomInt(0, 100)}%`,\r\n      left: `${getRandomInt(0, 100)}%`,\r\n    };\r\n\r\n    // Push the generated flower object to the array\r\n    flowers.push(flower);\r\n  }\r\n\r\n  return flowers;\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport function Torch (props) {\r\n    const [torchOn, setTorchOn] = useState(false)\r\n    const toggleTorch = () => {\r\n        props.handleToggle(props.index, !torchOn)\r\n        setTorchOn(!torchOn)\r\n    }\r\n    return <div className={`torch ${torchOn ? \"torch-on\" : \"torch-off\"}`} onClick={() => toggleTorch()}></div>\r\n}","export const letterMapping = {\r\n  0: \"\",\r\n  1: \"B\",\r\n  2: \"C\",\r\n  3: \"D\",\r\n  4: \"E\",\r\n  5: \"F\",\r\n  6: \"G\",\r\n  7: \"H\",\r\n  8: \"I\",\r\n  9: \"J\",\r\n  10: \"K\",\r\n  11: \"L\",\r\n  12: \"M\",\r\n  13: \"N\",\r\n  14: \"O\",\r\n  15: \"P\",\r\n};\r\n","import AnswerAndHintBox from \"../../components/AnswerAndHintBox\";\r\nimport { Torch } from \"./Torch\";\r\nimport { useEffect, useState } from \"react\"\r\nimport \"./Two.css\";\r\nimport { letterMapping } from \"./Two.constants\";\r\n\r\nfunction Two() {\r\n    const [torchArray, setTorchArray] = useState([false,false,false,false])\r\n\r\n    const handleToggle = (index, state) => {\r\n        const newTorchArray = [...torchArray]\r\n        newTorchArray[index] = state;\r\n        setTorchArray(newTorchArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const decimalValue = parseInt(torchArray.map(Number).join(''), 2);\r\n\r\n        document.getElementsByClassName('level-2-answer-container')[0].innerHTML=letterMapping[decimalValue]\r\n\r\n    }, [torchArray])\r\n    return (\r\n        <div className=\"level-2-div\">\r\n            <AnswerAndHintBox />\r\n            <div className=\"torch-container\">\r\n                <Torch index={0} handleToggle={handleToggle}/>\r\n                <Torch index={1} handleToggle={handleToggle}/>\r\n                <Torch index={2} handleToggle={handleToggle}/>\r\n                <Torch index={3} handleToggle={handleToggle}/>\r\n            </div>\r\n            <div className=\"level-2-answer-container\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Two;\r\n","function ColourWizard () {\r\n    return <div className=\"colour-wizard\">\r\n        <div className=\"colour-wizard-head\"></div>\r\n        <div className=\"colour-wizard-body\"></div>\r\n    </div>\r\n}\r\n\r\nexport default ColourWizard","function Dot (props) {\r\n    return <div className=\"dot\" style={{backgroundColor: `${props.colour}`}}>{props.letter}</div>\r\n}\r\n\r\nexport default Dot","import { lettersByColour } from \"./Three.constants\";\r\n\r\nexport function getColoursFromString(inputString) {\r\n  const colours = [];\r\n\r\n  for (const letter of inputString) {\r\n    const colour = getColourByLetter(letter);\r\n    if (colour) {\r\n      colours.push(colour);\r\n    }\r\n  }\r\n\r\n  return colours.join(\", \");\r\n}\r\n\r\nfunction getColourByLetter(letter) {\r\n  for (const key in lettersByColour) {\r\n    if (lettersByColour[key] === letter) {\r\n      return key;\r\n    }\r\n  }\r\n  // If the letter is not found, you can handle it accordingly, e.g., return null.\r\n  return null;\r\n}\r\n\r\nexport function generateDotArray() {\r\n  const colors = [\r\n    \"rgb(255, 0, 0)\", // Red\r\n    \"rgb(255, 165, 0)\", // Orange\r\n    \"rgb(255, 255, 0)\", // Yellow\r\n    \"rgb(85, 168, 48)\", // Grassy Green\r\n    \"rgb(0, 255, 255)\", // Cyan\r\n    \"rgb(0, 0, 255)\", // Blue\r\n    \"rgb(128, 0, 128)\", // Purple\r\n    \"rgb(255, 20, 147)\", // Deep Pink\r\n    \"rgb(255, 69, 0)\", // Red-Orange\r\n    \"rgb(255, 215, 0)\", // Gold\r\n    \"rgb(0, 128, 0)\", // Green\r\n    \"rgb(0, 128, 128)\", // Teal\r\n    \"rgb(0, 0, 128)\", // Navy\r\n    \"rgb(255, 102, 255)\", // Pinkish\r\n    \"rgb(232, 120, 120)\", // Pink\r\n    \"rgb(128, 0, 255)\", // Violet\r\n  ];\r\n\r\n  const dotArray = [];\r\n\r\n  let previousColor = null;\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    const innerArray = [];\r\n\r\n    for (let j = 0; j < 12; j++) {\r\n      let randomIndex;\r\n\r\n      // Ensure the next random color is different from the previous one\r\n      do {\r\n        randomIndex = Math.floor(Math.random() * colors.length);\r\n      } while (colors[randomIndex] === previousColor);\r\n\r\n      const dot = {\r\n        colour: colors[randomIndex],\r\n        letter: lettersByColour[colors[randomIndex]],\r\n      };\r\n\r\n      innerArray.push(dot);\r\n      previousColor = colors[randomIndex];\r\n    }\r\n\r\n    dotArray.push(innerArray);\r\n  }\r\n\r\n  return dotArray;\r\n}\r\n","import { generateDotArray, getColoursFromString } from \"./Three.service\";\r\n\r\nexport const lettersByColour = {\r\n  \"rgb(255, 0, 0)\": \"C\", // Red\r\n  \"rgb(255, 165, 0)\": \"H\", // Orange\r\n  \"rgb(255, 255, 0)\": \"R\", // Yellow\r\n  \"rgb(85, 168, 48)\": \"O\", // Grassy Green\r\n  \"rgb(0, 255, 255)\": \"M\", // Cyan\r\n  \"rgb(0, 0, 255)\": \"A\", // Blue\r\n  \"rgb(128, 0, 128)\": \"L\", // Purple\r\n  \"rgb(255, 20, 147)\": \"E\", // Deep Pink\r\n  \"rgb(255, 69, 0)\": \"V\", // Red-Orange\r\n  \"rgb(255, 215, 0)\": \"K\", // Gold\r\n  \"rgb(0, 128, 0)\": \"B\", // Green\r\n  \"rgb(0, 128, 128)\": \"D\", // Teal\r\n  \"rgb(0, 0, 128)\": \"F\", // Navy\r\n  \"rgb(255, 102, 255)\": \"G\", // Pinkish\r\n  \"rgb(232, 120, 120)\": \"I\", // Pink\r\n  \"rgb(128, 0, 255)\": \"J\", // Violet\r\n};\r\n\r\nexport const wizardText =\r\n  \"Greetings Reader! I am the Colour Wizard! It's so nice of you to visit my book. \" +\r\n  \"I don't see many travellers these days. The solution to this book is: \";\r\nexport const wizardAnswer = getColoursFromString(\"CHROMALEVO\");\r\n\r\nexport const dotArray = generateDotArray();\r\n","import { useState } from 'react'\r\nimport AnswerAndHintBox from \"../../components/AnswerAndHintBox\";\r\nimport ColourWizard from './ColourWizard'\r\nimport Dot from './Dot'\r\nimport { dotArray, wizardAnswer, wizardText } from './Three.constants'\r\nimport './Three.css'\r\n\r\nfunction Three () {\r\n    const [showWizardText, setShowWizardText] = useState(false)\r\n\r\n    const toggleText = () => {\r\n        setShowWizardText(!showWizardText)\r\n    }\r\n\r\n    return <div className='level-3-div'>\r\n         <AnswerAndHintBox />\r\n        {dotArray.map((dotRow) => {\r\n           return <div className='dot-row'>\r\n            {dotRow.map((dot) => {\r\n               return <Dot colour={dot.colour} letter={dot.letter} />\r\n            })}\r\n           </div>\r\n        })}\r\n        <div className='colour-wizard-box' onClick={toggleText}>\r\n            <ColourWizard />\r\n            {showWizardText && <div className='colour-wizard-text'>{wizardText} <br/><br/> {wizardAnswer}</div>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Three","import React from \"react\";\r\nimport { Routes, Route, useLocation } from \"react-router-dom\";\r\nimport Library from \"../Library/Library\";\r\nimport One from \"../Levels/one/One\";\r\nimport Two from \"../Levels/two/Two\";\r\nimport Three from \"../Levels/three/Three\";\r\n\r\nfunction GameRoutes() {\r\n  let location = useLocation();\r\n  return (\r\n    <Routes location={location} key={location.pathname}>\r\n      <Route exact path=\"/puzzles-v4\" element={<Library />} />\r\n      <Route exact path=\"/puzzles-v4/one\" element={<One />} />\r\n      <Route exact path=\"/puzzles-v4/two\" element={<Two />} />\r\n      <Route exact path=\"/puzzles-v4/three\" element={<Three />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default GameRoutes;\r\n","import \"./App.css\";\nimport GameRoutes from \"./routes/GameRoutes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div\n        className=\"app-level-container\"\n        style={{\n          width: `${window.innerWidth}px`,\n          height: `${window.innerHeight}px`,\n        }}\n      >\n        <GameRoutes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}